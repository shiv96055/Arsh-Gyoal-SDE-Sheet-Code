//APPROACH -1
TC - O(N)
SC - O(1)

class Solution {
public:
        int removeDuplicates(vector<int>& nums) {
        
        int count = 0;
        
       for(int i = 1; i<nums.size(); i++){
           
           if(nums[i] == nums[i-1]) count++;
           else nums[i-count] = nums[i];
       }
        
        
        return nums.size() - count; 

    
    }
};

//APPROACH -2
TC - O(N^2)
SC - O(1)

class Solution {
public:

 int removeDuplicates(vector<int>& nums) {
         int i =0;
        while(i<nums.size() -1){
            if(nums[i] == nums[i+1]){
                nums.erase(nums.begin() + i); // these take o(n) time complexcity
            }else{
                i++;
            }
        }
        
        return nums.size();
    
    }
};


